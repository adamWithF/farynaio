{"version":3,"sources":["webpack:///./src/templates/blog-post/index.js"],"names":["BlogPostTemplate","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","action","method","target","onSubmit","window","open","type","name","value","href","pageQuery"],"mappings":"6FAAA,kJAgGeA,UAvFU,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,6BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,gCACE,wBAAIC,SAAS,YAAYd,EAAKQ,YAAYH,OAC1C,2BAAIL,EAAKQ,YAAYO,OAEvB,6BACEC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCJ,SAAS,gBAEX,6BACA,gCACE,kBAAC,IAAD,QAGJ,yBAAKH,UAAU,iBACb,wBACEQ,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGlB,GACC,kBAAC,OAAD,CAAMmB,GAAInB,EAASoB,OAAOC,KAAMC,IAAI,QAApC,KACKtB,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMkB,GAAIlB,EAAKmB,OAAOC,KAAMC,IAAI,QAC7BrB,EAAKC,YAAYH,MADpB,SAOR,0BACFM,UAAU,kBACNkB,OAAO,kCACPC,OAAO,OACPC,OAAO,cACPC,SAAU,kBACRC,OAAOC,KACL,kCACA,cACA,yCAIR,gQACA,yBAAKvB,UAAU,WACf,0DAEA,2BAAOwB,KAAK,OAAOC,KAAK,WAExB,2BAAOD,KAAK,SAASE,MAAM,IAAID,KAAK,UACpC,2BAAOD,KAAK,SAASE,MAAM,cAC3B,uBAAG1B,UAAU,WACb,kBAAC,IAAD,CAAc2B,KAAK,0BAAnB,8BAYG,IAAMC,EAAS,c","file":"component---src-templates-blog-post-index-js-c92158c04d488bb87a93.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport \"./style.scss\"\nimport Bio from \"../../components/bio\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport ExternalLink from \"../../components/ExternalLink\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <form\n    className=\"newsletter-form\"\n        action=\"https://tinyletter.com/farynaio\"\n        method=\"post\"\n        target=\"popupwindow\"\n        onSubmit={() =>\n          window.open(\n            \"https://tinyletter.com/farynaio\",\n            \"popupwindow\",\n            \"scrollbars=yes,width=800,height=600\"\n          )\n        }\n    >\n    <p>Get a front line notifications of product launches with special deals - if the product is not free. Behind the scenes of making and launching products, lessons learned, plus my random thoughts, which I consider worth sharing.</p>\n    <div className=\"content\">\n    <label>\n    Enter your email address\n    <input type=\"text\" name=\"email\" />\n    </label>\n    <input type=\"hidden\" value=\"1\" name=\"embed\" />\n    <input type=\"submit\" value=\"Subscribe\" />\n    <p className=\"powered\">\n    <ExternalLink href=\"https://tinyletter.com\">\n    powered by TinyLetter\n    </ExternalLink>\n    </p>\n    </div>\n    </form>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}